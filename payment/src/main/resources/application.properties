## server configuration
## server configuration
server.port=8007
spring.application.name= payment

## Logging configuration
logging.level.org.springframework.data.elasticsearch.client.WIRE=TRACE

## Health management configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.metrics.tags.application= ${spring.application.name}

# Swagger API configuration
dataservice.openapi.dev-url=http://localhost:9090
springdoc.show-actuator=true
springdoc.use-management-port=true
management.server.port=9094
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

# Redis configuration
spring.redis.host=127.0.0.1
spring.redis.port=6379

spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://localhost:3306/bms_booking
spring.datasource.username= root
spring.datasource.password= LGcnsg@123
spring.jpa.show-sql= true
spring.jpa.defer-datasource-initialization= true
spring.jpa.database-platform= org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto= create

## MQ configuration


## Circuit breaker, retry and ratelimiter pattern while calling other microservices
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
resilience4j.circuitbreaker.instances.onboardCheckSeatCapacity.minimumNumberOfCalls= 5
resilience4j.circuitbreaker.instances.onboardCheckSeatCapacity.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.onboardCheckSeatCapacity.waitDurationInOpenState= 30000
resilience4j.circuitbreaker.instances.onboardCheckSeatCapacity.permittedNumberOfCallsInHalfOpenState=2

resilience4j.retry.configs.default.registerHealthIndicator= true
resilience4j.retry.instances.retryToCheckSeatCapacity.maxRetryAttempts=3
resilience4j.retry.instances.retryToCheckSeatCapacity.waitDuration=2000

## OAuth Server details
security.oauth2.resourceserver.jwt.jwk-set-uri= http://localhost:7080/realms/master/protocol/openid-connect/certs
bms.booking.API_KEY=TestAPIKey
bms.onboard.API_KEY=TestAPIKey

# Kafka Producer properties
spring.kafka.producer.bootstrap-servers=localhost:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id=payment-group


spring.kafka.listener.ack-mode=MANUAL

# Kafka Common Kafka Properties
auto.create.topics.enable=false
